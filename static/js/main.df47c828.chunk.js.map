{"version":3,"sources":["components/Chart.jsx","App.js","index.js"],"names":["Chart","data","polar","width","interpolation","style","stroke","size","fill","App","useState","setData","numX","setNumX","numY","setNumY","useEffect","reading","setInterval","Math","floor","random","x","y","clearInterval","className","ReactDOM","render","document","getElementById"],"mappings":"uOAGaA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,eAAC,IAAD,CAAcC,OAAO,EAAOC,MAAO,IAAnC,UACE,cAAC,IAAD,CACEC,cAAc,SACdH,KAAMA,EACNI,MAAO,CAAEJ,KAAM,CAAEK,OAAQ,cAE3B,cAAC,IAAD,CACEL,KAAMA,EACNM,KAAM,EACNF,MAAO,CAAEJ,KAAM,CAAEO,KAAM,kBC6BhBC,MAxCf,WACE,IADa,EASWC,mBAAS,IATpB,mBASNT,EATM,KASAU,EATA,OAUWD,mBAAS,GAVpB,mBAUNE,EAVM,KAUAC,EAVA,OAWWH,mBAAS,GAXpB,mBAWNI,EAXM,KAWAC,EAXA,KA8Bb,OAbAC,qBAAU,WACR,IAAMC,EAAUC,aAAY,WAE1BL,EAAQD,EAAO,GACfG,EAPKI,KAAKC,MAAM,GAAAD,KAAKE,UAAuB,GAS5CV,EAAQ,GAAD,mBAAKV,GAAL,CAAW,CAAEqB,EAAGV,EAAMW,EAAGT,QAC/B,KACH,OAAO,WACLU,cAAcP,MAEf,CAAChB,IAGF,sBAAKwB,UAAU,YAAf,UACE,uCACA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAOxB,KAAMA,U,OChCrByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.df47c828.chunk.js","sourcesContent":["import React from \"react\";\nimport { VictoryChart, VictoryLine, VictoryScatter } from \"victory\";\n\nexport const Chart = ({ data }) => {\n  return (\n    <VictoryChart polar={false} width={1000}>\n      <VictoryLine\n        interpolation=\"linear\"\n        data={data}\n        style={{ data: { stroke: \"#c43a31\" } }}\n      />\n      <VictoryScatter\n        data={data}\n        size={3}\n        style={{ data: { fill: \"#c43a31\" } }}\n      />\n    </VictoryChart>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Chart } from \"./components/Chart\";\n\nfunction App() {\n  const dataInitial = [\n    { x: 0, y: 0 },\n    { x: 1, y: 2 },\n    { x: 2, y: 1 },\n    { x: 3, y: 4 },\n    { x: 4, y: 3 },\n    { x: 5, y: 5 },\n  ];\n  const [data, setData] = useState([]);\n  const [numX, setNumX] = useState(0);\n  const [numY, setNumY] = useState(0);\n\n  const getRandomInt = () => {\n    return Math.floor(Math.random() * (51 - 0)) + 0;\n  };\n\n  useEffect(() => {\n    const reading = setInterval(() => {\n      // console.log(\"updated\");\n      setNumX(numX + 1);\n      setNumY(getRandomInt());\n\n      setData([...data, { x: numX, y: numY }]);\n    }, 1000);\n    return () => {\n      clearInterval(reading);\n    };\n  }, [data]);\n\n  return (\n    <div className=\"container\">\n      <h1>Chart</h1>\n      <div className=\"chart\">\n        <Chart data={data} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}